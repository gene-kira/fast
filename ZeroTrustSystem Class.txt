### Zero-Trust System with Advanced AI Integration

#### 1. **System Architecture Overview**
The system will consist of the following components:
- **File Monitoring**: Scan files for malicious content and personal data.
- **Port Security**: Ensure all ports are secure.
- **Anomaly Detection**: Detect unusual behavior in file access patterns and network traffic.
- **Online Gaming Protection**: Prevent backdoor attacks during online gaming.

#### 2. **Core Components**

##### a. **File Monitoring and Analysis**
- **AI-based File Scanning**: Use machine learning models to detect malicious files.
- **Behavioral Analysis**: Monitor file access patterns for anomalies.
- **Personal Data Detection**: Identify and block the exfiltration of personal data.
- **Zip and Encrypted Files Handling**: Delete zip files with password protection and encrypted files.

##### b. **Port Security**
- **Port Scanning**: Ensure all ports are secure and monitor for unauthorized access.

##### c. **Anomaly Detection**
- **Behavioral Analysis**: Detect unusual patterns in file access and network traffic.
- **Network Traffic Monitoring**: Monitor network traffic for suspicious activity.

##### d. **Online Gaming Protection**
- **Real-time Monitoring**: Protect the system from backdoor attacks during online gaming.

### Explanation of the Script

1. **ZeroTrustSystem Class**:
   - Initializes and runs the main components: file monitoring, port security, anomaly detection, and gaming protection.
   - The `run` method continuously checks for threats every minute.

2. **FileMonitor Class**:
   - Scans files for malware signatures, personal data, zip files with password protection, encrypted files, and anomalies.
   - Uses an Isolation Forest model to detect anomalous file access patterns.

3. **PortSecurity Class**:
   - Checks common ports (1-1024) for unauthorized access.
   - Closes open ports that should be closed.

4. **AnomalyDetector Class**:
   - Monitors network traffic and file access patterns for unusual behavior.
   - Placeholder methods for monitoring network traffic and file access.

5. **GamingProtection Class**:
   - Protects the system during online gaming by blocking known malicious IPs and ports.
   - Placeholder method for blocking malicious IPs.

### Notes
- This script is a high-level blueprint and can be expanded with more detailed implementations, such as integrating specific machine learning models, improving port security checks, and enhancing anomaly detection algorithms.
- The `normal_access_patterns.csv` file should contain data on normal file access patterns to train the Isolation Forest model.
- The `malware_signatures` list should be populated with known malware signatures from a database or file.

This script provides a robust foundation for building a zero-trust system that leverages advanced AI techniques to ensure system security.